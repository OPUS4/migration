<?xml version="1.0" encoding="UTF-8"?>
<project name="opus4migration" default="build">

    <property environment="env" />
    <property name="workspace" value="${env.WORKSPACE}" /><!-- Wird von Jenkins gesetzt. -->
    <property name="configfile" location="${workspace}/../opus-config.properties" />
    <property name="frameworkdir" location="${basedir}/../framework" />
    <property name="serverdir" location="${basedir}/../server" />
    <property name="libsdir" location="/home/opus4ci/libs" />

    <target name="build" depends="prepare,lint,phpunit"/>
  
    <target name="clean">
        <delete dir="${basedir}/build/logs" />
        <delete dir="${basedir}/build/coverage" />

        <delete includeEmptyDirs="true">
            <fileset dir="${serverdir}/workspace/tmp" includes="**/*" />
        </delete>

        <delete includeEmptyDirs="true">
            <fileset dir="${basedir}/tests/workspace/cache" includes="**/*" />
        </delete>

        <delete includeEmptyDirs="true">
            <fileset dir="${basedir}/tests/workspace/log" includes="**/*" />
        </delete>

        <delete includeEmptyDirs="true">
            <fileset dir="${serverdir}/scripts/migration/log" includes="**/*" />
        </delete>
    </target>

    <target name="setup" depends="prepare-dependencies,prepare-config,prepare-createdb" />

    <target name="prepare-dependencies">
        <!-- Links für Server -->
        <symlink link="${serverdir}/db/schema" resource="${frameworkdir}/db/schema" failonerror="false" />
        <symlink link="${serverdir}/library/Opus" resource="${frameworkdir}/library/Opus" failonerror="false" />
        <symlink link="${serverdir}/library/Zend" resource="${libsdir}/ZendFramework/library/Zend" failonerror="false" />
        <symlink link="${serverdir}/library/Apache" resource="${libsdir}/SolrPhpClient/Apache" failonerror="false" />

        <!-- Links für Migration -->
        <symlink link="${basedir}/library/Opus" resource="${frameworkdir}/library/Opus" failonerror="false" />
        <symlink link="${basedir}/library/Zend" resource="${libsdir}/ZendFramework/library/Zend" failonerror="false" />
    </target>

    <target name="prepare-config" description="Prepares the configuration files">
        <!-- Prepare test configuration. -->
        <copy file="${basedir}/tests/config.ini.template" toFile="${basedir}/tests/config.ini" filtering="true"
              overwrite="true">
            <filterset filtersFile="${configfile}" />
        </copy>

        <!-- Prepare main configuration. Needed for scripts like SolrIndexBuilder. -->
        <copy file="${basedir}/application/configs/config.ini.template"
              toFile="${basedir}/application/configs/config.ini" filtering="true" overwrite="true">
            <filterset filtersFile="${configfile}" />
        </copy>

        <copy file="${basedir}/application/configs/migration_config.ini.template"
              toFile="${basedir}/application/configs/migration_config.ini" overwrite="true" />
    </target>

    <target name="prepare-createdb">
        <copy file="${serverdir}/db/createdb.sh.template"
              toFile="${serverdir}/db/createdb.sh" filtering="true" overwrite="true">
            <filterset filtersFile="${configfile}" />
        </copy>
        <chmod file="${serverdir}/db/createdb.sh" perm="+x" />
    </target>

    <target name="prepare" depends="clean">
        <mkdir dir="${basedir}/build/logs" />
        <mkdir dir="${basedir}/build/coverage" />
    </target>

    <target name="lint">
        <apply executable="php" dir="${basedir}" failonerror="on" logerror="on">
            <arg line="-l"/>
            <fileset dir="${basedir}" followsymlinks="false">
                <include name="**/*.php"/>
                <modified />
            </fileset>
        </apply>
    </target>

    <target name="phpmd"> <!-- TODO leave it to server builds? -->
        <exec executable="phpmd" dir="${basedir}" logerror="on" output="${basedir}/build/logs/phpunit-pmd.xml" >
            <arg line="${serverdir}/scripts/migration xml codesize,unusedcode,naming,design "/>
        </exec>
    </target> 
  
    <target name="phpcpd"> <!-- TODO leave it to server builds? -->
        <exec executable="phpcpd" dir="${basedir}" logerror="on" >
            <arg line="--min-lines 3" />
            <arg line="--min-tokens 30" />
            <arg line="--log-pmd ${basedir}/build/logs/phpunit-cpd-details.xml" />
            <arg line="${serverdir}/scripts/migration" />
        </exec>
    </target> 
  
    <target name="phpunit">
        <exec executable="phpunit" dir="${basedir}/tests" failonerror="on">
            <arg line=" --log-junit ${basedir}/build/logs/phpunit.xml" />
            <arg line="--coverage-clover ${basedir}/build/logs/phpunit.coverage.xml" />
            <arg line="--coverage-html ${basedir}/build/coverage" />
            <arg line="--configuration phpunit.xml . " />
        </exec>                                                                                                                                                                                                        
    </target>
  
</project>